set(LAPACK_LIBDIR "/usr/lib64")
set(NETCDF_PATH "$ENV{NETCDF_PATH}")
set(SUPPORTS_CXX "FALSE")
if("$ENV{COMPILER}" STREQUAL "gnu")
  set(MPIFC "mpif90")
  set(FFLAGS_NOOPT "-O0")
  set(MPICC "mpicc")
  set(SCC "gcc")
  set(MPICXX "mpicxx")
  set(HAS_F2008_CONTIGUOUS "FALSE")
  set(SUPPORTS_CXX "TRUE")
  set(FFLAGS "-fconvert=big-endian -ffree-line-length-none -ffixed-line-length-none")
  set(FIXEDFLAGS "-ffixed-form")
  set(CXX_LINKER "FORTRAN")
  set(FC_AUTO_R8 "-fdefault-real-8")
  set(CFLAGS "-std=gnu99")
  set(FREEFLAGS "-ffree-form")
  set(SFC "gfortran")
  set(SCXX "g++")
endif()
if("$ENV{COMPILER}" STREQUAL "nag")
  set(MPIFC "mpif90")
  set(FFLAGS_NOOPT "-Wp,-macro=no_com -convert=BIG_ENDIAN -indirect $ENV{CIMEROOT}/config/cesm/machines/nag_mpi_argument.txt")
  set(MPICC "mpicc")
  set(SCC "gcc")
  set(HAS_F2008_CONTIGUOUS "FALSE")
  set(FFLAGS "-Wp,-macro=no_com -convert=BIG_ENDIAN -indirect $ENV{CIMEROOT}/config/cesm/machines/nag_mpi_argument.txt")
  set(FIXEDFLAGS "-fixed")
  set(FC_AUTO_R8 "-r8")
  set(CFLAGS "-std=gnu99")
  set(FREEFLAGS "-free")
  set(SFC "nagfor")
endif()
if("$ENV{COMPILER}" STREQUAL "intel")
  set(MPIFC "mpif90")
  set(FFLAGS_NOOPT "-O0")
  set(MPICC "mpicc")
  set(SCC "icc")
  set(MPICXX "mpicxx")
  set(HAS_F2008_CONTIGUOUS "TRUE")
  set(CXX_LDFLAGS "-cxxlib")
  set(SUPPORTS_CXX "TRUE")
  set(FFLAGS "-qno-opt-dynamic-align  -convert big_endian -assume byterecl -ftz -traceback -assume realloc_lhs -fp-model source")
  set(FIXEDFLAGS "-fixed -132")
  set(CXX_LINKER "FORTRAN")
  set(FC_AUTO_R8 "-r8")
  set(CFLAGS "-qno-opt-dynamic-align -fp-model precise -std=gnu99")
  set(FREEFLAGS "-free")
  set(SFC "ifort")
  set(SCXX "icpc")
  if("$ENV{MPILIB}" STREQUAL "mpi-serial")
    if("$ENV{compile_threaded}" STREQUAL "false")
      set(PFUNIT_PATH "/fs/cgd/csm/tools/pFUnit/pFUnit3.2.8_hobart_Intel15.0.2_noMPI_noOpenMP")
    endif()
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "pgi")
  set(MPIFC "mpif90")
  set(FFLAGS_NOOPT "-O0 -g -Ktrap=fp -Mbounds -Kieee")
  set(MPICC "mpicc")
  set(SCC "pgcc")
  set(MPICXX "mpicxx")
  set(HAS_F2008_CONTIGUOUS "FALSE")
  set(FFLAGS "-i4 -gopt  -time -Mextend -byteswapio -Mflushz -Kieee")
  set(FIXEDFLAGS "-Mfixed")
  set(CXX_LINKER "CXX")
  set(FC_AUTO_R8 "-r8")
  set(CFLAGS "-gopt  -time")
  set(FREEFLAGS "-Mfree")
  set(SFC "pgf95")
  set(SCXX "pgc++")
endif()
if("$ENV{MPILIB}" STREQUAL "mvapich2")
  set(MPI_LIB_NAME "mpich")
endif()
set(CPPDEFS "${CPPDEFS}  -D$ENV{OS}")
if("$ENV{MODEL}" STREQUAL "gptl")
  set(CPPDEFS "${CPPDEFS}  -DHAVE_NANOTIME -DBIT64 -DHAVE_VPRINTF -DHAVE_BACKTRACE -DHAVE_SLASHPROC -DHAVE_COMM_F2C -DHAVE_TIMES -DHAVE_GETTIMEOFDAY")
endif()
if("$ENV{MODEL}" STREQUAL "pop")
  set(CPPDEFS "${CPPDEFS}  -D_USE_FLOW_CONTROL")
endif()
if("$ENV{COMPILER}" STREQUAL "nag")
  set(CPPDEFS "${CPPDEFS}  -DFORTRANUNDERSCORE -DNO_CRAY_POINTERS -DNO_SHR_VMATH -DCPRNAG")
  set(CPPDEFS "${CPPDEFS}  -DNO_C_SIZEOF")
  if("$ENV{MODEL}" STREQUAL "cism")
    set(FFLAGS "${FFLAGS}  -mismatch_all")
  endif()
  if("$ENV{DEBUG}" STREQUAL "FALSE")
    set(FFLAGS_NOOPT "${FFLAGS_NOOPT}  -ieee=full")
    set(FFLAGS "${FFLAGS}  -ieee=full -O2")
  endif()
  if("$ENV{DEBUG}" STREQUAL "TRUE")
    set(FFLAGS_NOOPT "${FFLAGS_NOOPT}  -g -time -f2003 -ieee=stop")
    set(FFLAGS "${FFLAGS}  -C=all -g -time -f2003 -ieee=stop")
    set(CFLAGS "${CFLAGS}  -g")
    if("$ENV{compile_threaded}" STREQUAL "false")
      set(FFLAGS_NOOPT "${FFLAGS_NOOPT}  -gline")
      set(FFLAGS "${FFLAGS}  -gline")
    endif()
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "intel")
  set(FFLAGS "${FFLAGS}  -lifcore")
  set(CPPDEFS "${CPPDEFS}  -DFORTRANUNDERSCORE -DCPRINTEL")
  set(CFLAGS "${CFLAGS}  -lifcore")
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(FFLAGS "${FFLAGS}  -qopenmp")
  endif()
  if("$ENV{MPILIB}" STREQUAL "mpi-serial")
    set(FFLAGS "${FFLAGS}  -mcmodel medium")
  endif()
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(CFLAGS "${CFLAGS}  -qopenmp")
  endif()
  if("$ENV{DEBUG}" STREQUAL "TRUE")
    set(FFLAGS "${FFLAGS}  -O0 -g -check uninit -check bounds -check pointers -fpe0 -check noarg_temp_created")
    set(CFLAGS "${CFLAGS}  -O0 -g")
  endif()
  if("$ENV{DEBUG}" STREQUAL "FALSE")
    set(FFLAGS "${FFLAGS}  -O2 -debug minimal")
    set(CFLAGS "${CFLAGS}  -O2 -debug minimal")
  endif()
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(FFLAGS_NOOPT "${FFLAGS_NOOPT}  -qopenmp")
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "gnu")
  set(CPPDEFS "${CPPDEFS}  -DFORTRANUNDERSCORE -DNO_R16 -DCPRGNU")
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(FFLAGS "${FFLAGS}  -fopenmp")
    set(CFLAGS "${CFLAGS}  -fopenmp")
  endif()
  if("$ENV{DEBUG}" STREQUAL "TRUE")
    set(FFLAGS "${FFLAGS}  -g -Wall -Og -fbacktrace -ffpe-trap=zero,overflow -fcheck=bounds")
    set(CFLAGS "${CFLAGS}  -g -Wall -Og -fbacktrace -ffpe-trap=invalid,zero,overflow -fcheck=bounds")
  endif()
  if("$ENV{DEBUG}" STREQUAL "FALSE")
    set(FFLAGS "${FFLAGS}  -O")
    set(CFLAGS "${CFLAGS}  -O")
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "pgi")
  set(CPPDEFS "${CPPDEFS}  -DFORTRANUNDERSCORE -DNO_SHR_VMATH -DNO_R16  -DCPRPGI")
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(FFLAGS "${FFLAGS}  -mp")
  endif()
  if("$ENV{MODEL}" STREQUAL "dwav")
    set(FFLAGS "${FFLAGS}  -Mnovect")
  endif()
  if("$ENV{MODEL}" STREQUAL "dice")
    set(FFLAGS "${FFLAGS}  -Mnovect")
  endif()
  if("$ENV{MODEL}" STREQUAL "dlnd")
    set(FFLAGS "${FFLAGS}  -Mnovect")
  endif()
  if("$ENV{MODEL}" STREQUAL "datm")
    set(FFLAGS "${FFLAGS}  -Mnovect")
  endif()
  if("$ENV{MODEL}" STREQUAL "docn")
    set(FFLAGS "${FFLAGS}  -Mnovect")
  endif()
  if("$ENV{MODEL}" STREQUAL "drof")
    set(FFLAGS "${FFLAGS}  -Mnovect")
  endif()
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(CFLAGS "${CFLAGS}  -mp")
  endif()
  if("$ENV{DEBUG}" STREQUAL "TRUE")
    set(FFLAGS "${FFLAGS}  -O0 -g -Ktrap=fp -Mbounds -Kieee")
  endif()
  if("$ENV{DEBUG}" STREQUAL "FALSE")
    set(FFLAGS "${FFLAGS}  -O0")
    set(CFLAGS "${CFLAGS}  -O0")
  endif()
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(FFLAGS_NOOPT "${FFLAGS_NOOPT}  -mp")
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "pgi")
  set(LDFLAGS "-time -Wl,--allow-multiple-definition")
endif()
set(SLIBS "${SLIBS} -L${NETCDF_PATH}/lib -lnetcdff -lnetcdf")
if("$ENV{COMPILER}" STREQUAL "pgi")
  set(LDFLAGS "${LDFLAGS}  -lgomp")
  set(LDFLAGS "${LDFLAGS}  -Wl,-R${NETCDF_PATH}/lib")
  set(LDFLAGS "${LDFLAGS}  -Wl,-R$ENV{COMPILER_PATH}/lib")
  set(LDFLAGS "${LDFLAGS}  -Wl,-R$ENV{COMPILER_PATH}/libso")
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(LDFLAGS "${LDFLAGS}  -mp")
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "nag")
  set(SLIBS "${SLIBS}  -L/usr/local/nag/lib/NAG_Fortran")
  set(LDFLAGS "${LDFLAGS}  -lpthread")
endif()
if("$ENV{COMPILER}" STREQUAL "intel")
  set(LDFLAGS "${LDFLAGS}  -lquadmath")
  set(LDFLAGS "${LDFLAGS}  -Wl,-rpath,${NETCDF_PATH}/lib")
  set(LDFLAGS "${LDFLAGS}  -Wl,-rpath,$ENV{COMPILER_PATH}/lib/intel64")
  set(LDFLAGS "${LDFLAGS}  -Wl,-rpath,$ENV{COMPILER_PATH}/mkl/lib/intel64")
  set(LDFLAGS "${LDFLAGS}  -Wl,-rpath,$ENV{MPI_PATH}/lib")
  set(LDFLAGS "${LDFLAGS}  -lifcore")
  if("$ENV{MPILIB}" STREQUAL "mvapich2")
    set(SLIBS "${SLIBS}  -mkl=cluster")
    set(SLIBS "${SLIBS}  -mkl=cluster")
  endif()
  if("$ENV{MPILIB}" STREQUAL "openmpi")
    set(SLIBS "${SLIBS}  -mkl=cluster")
  endif()
  if("$ENV{MPILIB}" STREQUAL "mpi-serial")
    set(SLIBS "${SLIBS}  -mkl")
  endif()
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(LDFLAGS "${LDFLAGS}  -qopenmp")
  endif()
endif()
if("$ENV{COMPILER}" STREQUAL "gnu")
  set(SLIBS "${SLIBS}  -lm")
  set(SLIBS "${SLIBS}  -ldl")
  if("$ENV{compile_threaded}" STREQUAL "true")
    set(LDFLAGS "${LDFLAGS}  -fopenmp")
  endif()
endif()
